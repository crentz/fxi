#!/bin/bash

home=$(getent passwd "$SUDO_USER" | cut -d: -f6)
rsync_excludes=${rsync_excludes:="$home/.config/f_iexclude.list"}
CONF=${disk_conf:="$home/.config/f_i.txt"}

check_root (){
# check if running as root
[[ $(id -u) -eq 0 ]] || { echo -e "\t You need to be root!\n" ; exit 1 ; }
}

# writing to disk.conf
d_conf() {
	local _conf=$1 _value=$2
	printf '%s\n' "${_conf}=${_value}" >> "$CONF"
}

# Parsing values from disk.conf
d_read() {
	local _conf=$1
	grep "${_conf}" "$CONF" | cut -d '=' -f2
}

welcome_msg () {

whiptail --title "Fluxuan-Installer" --msgbox "Welcome to Fluxuan-Installer utility.
This installer will guide you to the rest of the setup process.

Thank you for your interest in Fluxuan Linux.

https://Fluxuan.org - https://Forums.Fluxuan.org" 15 65

}

ask_part () {

disk=$(whiptail --inputbox "Your available devices are :

$(lsblk -lp | awk '/disk/ { print $1, "(" $4 ")" }' | cut -d '/' -f3)
##########################################################
Which disk should the system be installed on? (e.g. sdX):" 15 65 sdX --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
# The `3>&1 1>&2 2>&3` is a small trick to swap the stderr with stdout
# Meaning instead of return the error code, it returns the value entered

# Now to check if the user pressed OK or Cancel
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf DISK "$disk"
else
    exit 1 ;
fi



mode=$(whiptail --inputbox "Will you boot in bios or EFI mode (-- write bios or EFI --)?" 15 65 bios --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
# The `3>&1 1>&2 2>&3` is a small trick to swap the stderr with stdout
# Meaning instead of return the error code, it returns the value entered

# Now to check if the user pressed OK or Cancel
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf MODE "$mode"
else
    exit 1 ;
fi



whiptail --title "Fluxuan-Installer" --msgbox "Custom partitioning schemes are not yet supported.
The default scheme will be:

1-> 200mb Boot Partition on /dev/${disk}1

2-> SWAP Partition of your choosing on /dev/${disk}2

3-> Root Partition of the remaining space on /dev/${disk}3" 15 65 ;

if (whiptail --title "Fluxuan-Installer" --yesno "Proceed? (all data on $disk will be deleted, so make sure you backed up anything important)." 8 78); then
    	d_conf BOOTP "$disk"1
		d_conf SWAPP "$disk"2
		d_conf ROOTP "$disk"3
		mk_part
else
    exit 1 ;
fi

swaps=$(whiptail --inputbox "Choose the size of swap in GB (e.g. 2):" 8 78 2 --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
# The `3>&1 1>&2 2>&3` is a small trick to swap the stderr with stdout
# Meaning instead of return the error code, it returns the value entered

# Now to check if the user pressed OK or Cancel
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf SWAPS "$swaps"
else
    exit 1 ;
fi

}

mk_part() {
{
	local _disk _mode _swaps
	_disk=$(d_read DISK)
	_mode=$(d_read MODE)
	_swaps=$(d_read SWAPS)
	
	umount /dev/"$_disk"
	sfdisk --delete /dev/"$_disk"
	parted /dev/"$_disk" --script mklabel msdos
	partx /dev/"$_disk" && sleep 1
	if [ "$_mode" == "bios" ]; then
		(echo o) | fdisk /dev/"$_disk"
		(echo n; echo p; echo 1; echo ; echo +200M; echo n; echo p; echo 2; echo ; echo ; echo a; echo 1; echo p; echo w) | fdisk /dev/"$_disk"
		sfdisk -A /dev/"$_disk" 1	
	else
				
				(echo g) | fdisk /dev/"$_disk"
		(echo n; echo p; echo 1; echo ; echo +200M; echo n; echo p; echo 2; echo ; echo ; echo a; echo 1; echo p; echo w) | fdisk /dev/"$_disk"
		fdisk --part-type /dev/"$_disk" 1 EF
		
	fi	
		
	(echo n; echo p; echo 2; echo; echo +"$_swaps"G; echo w; echo q) | fdisk /dev/"$_disk"
	sfdisk --part-type /dev/"$_disk" 2 82
	(echo n; echo p; echo 3; echo; echo; echo w; echo q) | fdisk /dev/"$_disk"
	partx /dev/"$_disk" && sleep 1
	if [ "$_mode" == "bios" ]; then
		mkfs.ext4 /dev/"$_disk"1
	else
		mkfs.fat -F 32 /dev/"$_disk"1
	fi
	mkswap /dev/"$_disk"2
	swapon /dev/"$_disk"2
	mkfs.ext4 /dev/"$_disk"3
	mount /dev/"$_disk"3 /mnt
	if [ "$_mode" == "bios" ]; then
		mkdir -p /mnt/boot
		mount /dev/"$_disk"1 /mnt/boot
	else
		mkdir -p /mnt/boot/efi
		mount /dev/"$_disk"1 /mnt/boot/efi
	fi
for ((i=0; i<=100; i+=1)); do
        sleep 0.1
        echo "$i"
    done

} | whiptail --gauge "Creating Partitions on your disk" 6 60 0
}

check_excludes () {
if ! [[ -f  $rsync_excludes ]] ; then
    rsync_excludes="$home/.config/f_iexclude.list"
    sleep 2
    cat > "$rsync_excludes" <<EOF
# It is safe to delete this file after installation.
- /dev/*
- /cdrom/*
- /media/*
- /target
- /swapfile
- /mnt/*
- /sys/*
- /proc/*
- /tmp/*
- /live
- /boot/grub/grub.cfg
- /boot/grub/menu.lst
- /boot/grub/device.map
- /etc/udev/rules.d/70-persistent-cd.rules
- /etc/udev/rules.d/70-persistent-net.rules
- /etc/fstab
- /etc/mtab
- /home/snapshot
- /home/*/.gvfs
- /usr/bin/fxw
- /usr/share/fx/installer
- /usr/bin/welcome
EOF
chmod 666 "$rsync_excludes"
fi 
}

copy_sys () {
{
rsync -aAXv / /mnt/ --filter='P lost+found' --filter='H lost+found' --exclude-from="$rsync_excludes" --delete-excluded --info=progress2
if [[ -f /mnt/usr/sbin/update-initramfs.distrib ]] ; then
    cp /mnt/usr/sbin/update-initramfs.distrib /mnt/usr/sbin/update-initramfs
fi
if [[ -f /mnt/usr/sbin/update-initramfs.debian ]] ; then
    cp /mnt/usr/sbin/update-initramfs.debian /mnt/usr/sbin/update-initramfs
fi

genfstab -U /mnt >> /mnt/etc/fstab &

for ((i=0; i<=100; i+=1)); do
        proc=$(ps aux | grep -v grep | grep -e "rsync")
            if [[ "$proc" == "" ]]; then break; fi
            # Sleep for a longer period if the database is really big 
            # as dumping will take longer.
            sleep 10
            echo "$i"
           
        i=$(expr $i + 1)
        done
        # If it is done then display 100%
        echo 100
        # Give it some time to display the progress to the user.
        sleep 2

} | whiptail --gauge "Installing Operating System" 6 60 0
}

timezone() {
	arch-chroot /mnt dpkg-reconfigure tzdata
}

locales() {
	sleep 1 &&
	arch-chroot /mnt dpkg-reconfigure locales
}

set_hostname() {
hostname=$(whiptail --inputbox "Input your desired hostname" 8 78 fluxuan --title "Configuration..." 3>&1 1>&2 2>&3)
# The `3>&1 1>&2 2>&3` is a small trick to swap the stderr with stdout
# Meaning instead of return the error code, it returns the value entered

# Now to check if the user pressed OK or Cancel
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf HOSTNAME "$hostname"
    echo "$hostname" > /mnt/etc/hostname
	cat <<EOF > /mnt/etc/hosts
127.0.0.1	localhost
127.0.1.1	$hostname
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF
set_pass
else
    rm "$CONF" &&
    exit ;
fi
}

set_pass() {
PASSWD=$(whiptail --title "Fluxuan-Installer" --passwordbox "Choose your ROOT Password." 10 60 3>&1 1>&2 2>&3)

exitstatus=$?

if [ $exitstatus = 0 ]; then
	echo -e "$PASSWD\n$PASSWD" | passwd
else
	rm "$CONF" &&
	exit ;
fi
}

set_default_user() {
local _name
	_name=$(d_read NAME)
	
name=$(whiptail --inputbox "Create default USERNAME:" 8 78 fluxuan --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
# The `3>&1 1>&2 2>&3` is a small trick to swap the stderr with stdout
# Meaning instead of return the error code, it returns the value entered

# Now to check if the user pressed OK or Cancel
exitstatus=$?
if [ $exitstatus = 0 ]; then
	d_conf NAME "$name"
    arch-chroot /mnt usermod -l "$name" fluxuan
	arch-chroot /mnt usermod -m -d /home/"$name" "$name"
else
    exit 1 ;
fi

PASSWD=$(whiptail --title "Fluxuan-Installer" --passwordbox "Choose your USER Password." 10 60 3>&1 1>&2 2>&3)

exitstatus=$?

if [ $exitstatus = 0 ]; then
	echo -e "$PASSWD\n$PASSWD" | passwd "$_name"
	arch-chroot /mnt usermod -aG wheel,cdrom,floppy,audio,dip,video,plugdev,netdev,sudo "$_name"
	arch-chroot /mnt usermod -s /bin/bash "$_name"
else
	exit 1 ;
fi

}


setup_grub() {
{
	local _mode _disk
	_mode=$(d_read MODE)
	_disk=$(d_read DISK)
	if [ "$_mode" == "bios" ]; then
		arch-chroot /mnt grub-install /dev/"$_disk"
		arch-chroot /mnt update-grub
	else
		arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi
		arch-chroot /mnt grub-install /dev/"$_disk"
		arch-chroot /mnt update-grub
	fi
	for ((i=0; i<=100; i+=1)); do
        sleep 0.1
        echo "$i"
    done
} | whiptail --gauge "Installing Grub on your disk." 6 60 0
}

finish() {
	if (whiptail --title "Fluxuan-Installer" --yesno "Fluxuan Has been installed on your System. Would you like to reboot?" 8 78); then
	rm "$CONF" &&
	rm "$rsync_excludes" &&
    reboot
	else
    rm "$CONF" &&
    rm "$rsync_excludes" &&
    exit 0 ;
	fi
}

do_install() {
	welcome_msg
	ask_part
	mk_part
	check_excludes
	copy_sys
	timezone
	locale
	set_hostname
	set_pass
	set_default_user
	setup_grub
	finish
}

do_install
