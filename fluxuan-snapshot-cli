#!/bin/bash
# Will create live iso from currently installed Fluxuan system
# Run script as root or under su in terminal
# Variables for computer name, iso name and volume label
CONF=disk.conf
home=$(getent passwd $SUDO_USER | cut -d: -f6)
error_log=${error_log:="$home/backup_error.log"}
rsync_excludes=${rsync_excludes:="$(pwd)/exclude.list"}

# writing to disk.conf
d_conf() {
	local _conf=$1 _value=$2
	printf '%s\n' "${_conf}=${_value}" >> "$CONF"
}

# Parsing values from disk.conf
d_read() {
	local _conf=$1
	grep "${_conf}" "$CONF" | cut -d '=' -f2
}

check_root (){
# check if running as root
[[ $(id -u) -eq 0 ]] || { echo -e "\t You need to be root!\n" ; exit 1 ; }
}

check_exit () {
# if error exit and write in logfile
exit_code="$?"
[[ $exit_code -eq 0 ]] || { echo "
  
  Exit due to error:  $exit_code
  See $error_log for details.
  "
  exit 1 ; }
}

error_log () {
# Record errors in a logfile.
exec 2>"$error_log"

if [[ $DEBUG = "yes" ]] ; then
	set -x
fi
}

welcome_msg () {
echo
printf '%s\n' "Welcome to Fluxuan-Backup, this is a simple to use Live Iso Creator.

This Fluxuan-Backup will guide you to the rest of your Backup.

Fluxuan-Installer Will Be Added so you be able to restore your OS in a short time.

Thank you for your interest in Fluxuan Linux.

https://fluxuan.org  -  https://Forums.Fluxuan.org"

sleep 5
}

ask_part() {
	echo
	read -r -p "Choose HOSTNAME: " hostname
	d_conf HOSTNAME "$hostname"
	echo
	read -r -p "Choose ISONAME: " ISONAME
	d_conf ISONAME "$ISONAME"
	echo
	read -r -p "Choose disk Label: " LABEL
	d_conf LABEL "$LABEL"
	check_exit
	
}

install_dep () {
printf '%s\n' "Please wait Installing Dependencies..."
apt update && apt install rsync live-boot debootstrap squashfs-tools xorriso isolinux syslinux-efi grub-pc-bin grub-efi-amd64-bin grub-efi-ia32-bin mtools dosfstools resolvconf arch-install-scripts -y -qq
check_exit
}

create_folders () {
printf '%s\n' "Creating Folders."
mkdir -p $home/fluxuan_backup $home/fluxuan_backup/chroot
mkdir -p $home/fluxuan_backup/{staging/{EFI/BOOT,boot/grub/x86_64-efi,isolinux,live},tmp}
check_exit
}

check_excludes () {
if ! [[ -f  $rsync_excludes ]] ; then
    rsync_excludes="$(pwd)/exclude.list"
    sleep 2
    cat > "$rsync_excludes" <<EOF
- /home/*/[a-zA-Z0-9]*
- /home/*/fluxuan_backup
- /dev/*
- /cdrom/*
- /media/*
- /target
- /swapfile
- /mnt/*
- /sys/*
- /proc/*
- /tmp/*
- /live
- /var/tmp/
- /var/cache/
- /etc/udev/rules.d/70-persistent-cd.rules
- /etc/udev/rules.d/70-persistent-net.rules
- /etc/mtab
- /home/*/.gvfs
- .gvfs
- .local/share/gvfs-metadata
- .cache
- .var/app/*/cache
- .var/app/*/.cache
- /.Trash
- .Trash-1*
- .local/share/Trash
- /Trash
- .xsession-errors
- .xsession-errors.old
- .wayland-errors
- .local/share/RecentDocuments
- .recently-used
- .recently-used.xbel
- recently-used.xbel
- .thumbnails
- .thumb
- Thumbs.db
- .DS_Store
- .localised
- .CFUserTextEncoding
- .zcompdump*
- .wget-hsts
- /boot/grub/grub.cfg
- /boot/grub/menu.lst
- /boot/grub/device.map
- /boot/*.bak
- /boot/*.old-dkms
- /etc/udev/rules.d/70-persistent-cd.rules
- /etc/udev/rules.d/70-persistent-net.rules
- /etc/fstab
- /etc/fstab.d/*
- /etc/mtab
- /etc/blkid.tab
- /etc/blkid.tab.old
- /etc/popularity-contest.conf
- /home/snapshot
- /lib/live/overlay
- /lib/live/image
- /lib/live/rootfs
- /lib/live/mount
- /run/*
- /var/log/[a-b,A-Z]*
- /var/log/[d-f]*
- /var/log/[h-z]*
- /var/log/*gz
- /var/cache/apt/archives/*.deb
- /var/cache/apt/pkgcache.bin
- /var/cache/apt/srcpkgcache.bin
- /var/cache/apt/apt-file/*
- /var/cache/debconf/*~old
- /var/lib/apt/lists/*
- /var/lib/apt/*~
- /var/lib/apt/cdroms.list
- /var/lib/aptitude/*.old
- /var/lib/dhcp/*
- /var/lib/dpkg/*~old
- /var/spool/mail/*
- /var/mail/*
- /var/backups/*.gz
- /var/backups/*.bak
- /var/lib/dbus/machine-id
- /var/lib/live/config/*
- /var/swap
- /var/swapfile
- /usr/share/icons/*/icon-theme.cache
- /root/.aptitude
- /root/.bash_history
- /root/.disk-manager.conf
- /root/.fstab.log
- /root/.lesshst
- /root/*/.log
- /root/.local/share/*
- /root/.nano_history
- /root/.synaptic
- /root/.VirtualBox
- /root/.ICEauthority
- /root/.Xauthority
- /root/.ssh
- /root/fluxuan_backup
- /home/*/.Trash*
- /home/*/.local/share/Trash/*
- /home/*/.mozilla/*/Cache/*
- /home/*/.mozilla/*/urlclassifier3.sqlite
- /home/*/.mozilla/*/places.sqlite
- /home/*/.mozilla/*/cookies.sqlite
- /home/*/.mozilla/*/signons.sqlite
- /home/*/.mozilla/*/formhistory.sqlite
- /home/*/.mozilla/*/downloads.sqlite
- /home/*/.adobe
- /home/*/.aptitude
- /home/*/.bash_history
- /home/*/.cache
- /home/*/.dbus
- /home/*/.gksu*
- /home/*/.gvfs
- /home/*/.lesshst
- /home/*/.log
- /home/*/.macromedia
- /home/*/.nano_history
- /home/*/.pulse*
- /home/*/.recently-used
- /home/*/.recently-used.xbel
- /home/*/.local/share/recently-used.xbel
- /home/*/.thumbnails/large/*
- /home/*/.thumbnails/normal/*
- /home/*/.thumbnails/fail/*
- /home/*/.vbox*
- /home/*/.VirtualBox
- /home/*/VirtualBox\ VMs
- /home/*/.xsession-errors*
- /home/*/.ICEauthority
- /home/*/.Xauthority
- /home/*/.gnupg
- /home/*/.ssh
- /home/*/.xchat2
- /home/*/.config/hexchat/logs/*
EOF
check_exit
chmod 666 "$rsync_excludes"
fi 
}

get_system () {
printf '%s\n' "Cloning Your Operating System."
rsync -av --exclude-from="$rsync_excludes" / $home/fluxuan_backup/chroot
check_exit
}

get_resolv () {
printf '%s\n' "Copying Resolv.conf."
printf "" > $home/fluxuan_backup/chroot/etc/fstab
check_exit
}

set_hostname() {
local hostname
	hostname=$(d_read hostname)

	echo "$hostname" > $home/fluxuan_backup/chroot/etc/hostname
	cat <<EOF > $home/fluxuan_backup/chroot/hosts
127.0.0.1	localhost
127.0.1.1	$hostname
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF
check_exit
}

squashing_filesystem () {
mksquashfs $home/fluxuan_backup/chroot $home/fluxuan_backup/staging/live/filesystem.squashfs -b 1048576 -comp xz -e boot 
check_exit
}

touch_boot () {
touch $home/fluxuan_backup/staging/isolinux/isolinux.cfg
touch $home/fluxuan_backup/staging/boot/grub/grub.cfg
touch $home/fluxuan_backup/tmp/grub-embed.cfg
check_exit
}

print_menu () {
local ISONAME LABEL
	ISONAME=$(d_read ISONAME)
	LABEL=$(d_read LABEL)

printf "UI vesamenu.c32\n\nMENU TITLE Boot Menu\nDEFAULT linux\nTIMEOUT 600\nMENU RESOLUTION 640 480\nMENU COLOR border       30;44   #40ffffff #a0000000 std\nMENU COLOR title        1;36;44 #9033ccff #a0000000 std\nMENU COLOR sel          7;37;40 #e0ffffff #20ffffff all\nMENU COLOR unsel        37;44   #50ffffff #a0000000 std\nMENU COLOR help         37;40   #c0ffffff #a0000000 std\nMENU COLOR timeout_msg  37;40   #80ffffff #00000000 std\nMENU COLOR timeout      1;37;40 #c0ffffff #00000000 std\nMENU COLOR msg07        37;40   #90ffffff #a0000000 std\nMENU COLOR tabmsg       31;40   #30ffffff #00000000 std\n\nLABEL linux\n   MENU LABEL $ISONAME [BIOS/ISOLINUX]\n   MENU DEFAULT\n   KERNEL /live/vmlinuz\n   APPEND initrd=/live/initrd boot=live\n\n   $LABEL\n   MENU LABEL $ISONAME [BIOS/ISOLINUX] (nomodeset)\n   MENU DEFAULT\n   KERNEL /live/vmlinuz\n   APPEND initrd=/live/initrd boot=live nomodeset\nEOF" > $home/fluxuan_backup/staging/isolinux/isolinux.cfg

printf "insmod part_gpt\ninsmod part_msdos\ninsmod fat\ninsmod iso9660\n\ninsmod all_video\ninsmod font\n\nset default=\"0\"\nset timeout=30\n\n# If X has issues finding screens, experiment with/without nomodeset.\n\nmenuentry \"$ISONAME [EFI/GRUB]\" {\n    search --no-floppy --set=root --label $LABEL\n    linux (\$root)/live/vmlinuz boot=live\n    initrd (\$root)/live/initrd\n}\n\nmenuentry \"$ISONAME [EFI/GRUB] (nomodeset)\" {\n    search --no-floppy --set=root --label $LABEL\n    linux (\$root)/live/vmlinuz boot=live nomodeset\n    initrd (\$root)/live/initrd\n}\nEOF" > $home/fluxuan_backup/staging/boot/grub/grub.cfg

printf "if ! [ -d \"\$cmdpath\" ]; then\n    # On some firmware, GRUB has a wrong cmdpath when booted from an optical disc.\n    # https://gitlab.archlinux.org/archlinux/archiso/-/issues/183\n    if regexp --set=1:isodevice '^(\([^)]+\))\/?[Ee][Ff][Ii]\/[Bb][Oo][Oo][Tt]\/?$' \"\$cmdpath\"; then\n        cmdpath=\"\${isodevice}/EFI/BOOT\"\n    fi\nfi\nconfigfile \"\${cmdpath}/grub.cfg\"\nEOF" > $home/fluxuan_backup/tmp/grub-embed.cfg
check_exit
}

copy_boot () {
cp $home/fluxuan_backup/chroot/boot/vmlinuz-* $home/fluxuan_backup/staging/live/vmlinuz
cp $home/fluxuan_backup/chroot/boot/initrd.img-* $home/fluxuan_backup/staging/live/initrd
cp $home/fluxuan_backup/staging/boot/grub/grub.cfg $home/fluxuan_backup/staging/EFI/BOOT/
cp /usr/lib/ISOLINUX/isolinux.bin "$home/fluxuan_backup/staging/isolinux/"
cp /usr/lib/syslinux/modules/bios/* "$home/fluxuan_backup/staging/isolinux/"
cp -r /usr/lib/grub/x86_64-efi/* "$home/fluxuan_backup/staging/boot/grub/x86_64-efi/"
check_exit
}

write_grub () {
grub-mkstandalone -O i386-efi --modules="part_gpt part_msdos fat iso9660" --locales="" --themes="" --fonts="" --output="$home/fluxuan_backup/staging/EFI/BOOT/BOOTIA32.EFI" "boot/grub/grub.cfg=$home/fluxuan_backup/tmp/grub-embed.cfg"
grub-mkstandalone -O x86_64-efi --modules="part_gpt part_msdos fat iso9660" --locales="" --themes="" --fonts="" --output="$home/fluxuan_backup/staging/EFI/BOOT/BOOTx64.EFI" "boot/grub/grub.cfg=$home/fluxuan_backup/tmp/grub-embed.cfg"
check_exit
}

build_iso () {
cd $home/fluxuan_backup/staging 
dd if=/dev/zero of=efiboot.img bs=1M count=20 
mkfs.vfat efiboot.img 
mmd -i efiboot.img ::/EFI ::/EFI/BOOT 
mcopy -vi efiboot.img $home/fluxuan_backup/staging/EFI/BOOT/BOOTIA32.EFI $home/fluxuan_backup/staging/EFI/BOOT/BOOTx64.EFI $home/fluxuan_backup/staging/boot/grub/grub.cfg ::/EFI/BOOT/
xorriso -as mkisofs -iso-level 3 -o "$home/fluxuan_backup/$ISONAME.iso" -full-iso9660-filenames -volid "$LABEL" --mbr-force-bootable -partition_offset 16 -joliet -joliet-long -rational-rock -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin -eltorito-boot isolinux/isolinux.bin -no-emul-boot -boot-load-size 4 -boot-info-table --eltorito-catalog isolinux/isolinux.cat -eltorito-alt-boot -e --interval:appended_partition_2:all:: -no-emul-boot -isohybrid-gpt-basdat -append_partition 2 C12A7328-F81F-11D2-BA4B-00A0C93EC93B $home/fluxuan_backup/staging/efiboot.img "$home/fluxuan_backup/staging"

chmod 755 $home/fluxuan_backup/$ISONAME.iso
check_exit
}

finish() {
rm "$CONF"
rm "$rsync_excludes"
	read -r -p "Backup finished and is located in $home/fluxuan_backup. press E to exit and continue.
> " re
	case "$re" in
		E) exit ;;
		*) ;;
	esac
}

do_install () {
	welcome_msg
	ask_part
	install_dep
	create_folders
	check_excludes
	get_system
	get_resolv
	set_hostname
	squashing_filesystem
	touch_boot
	print_menu
	copy_boot
	write_grub
	build_iso
	finish
	}
	
do_install
