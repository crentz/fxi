#!/bin/bash

#       @(#)Copyright (c) 1991 Simon J. Gerraty
#
#       This file is provided in the hope that it will
#       be of use.  There is absolutely NO WARRANTY.
#       Permission to copy, redistribute or otherwise
#       use this file is hereby granted provided that
#       the above copyright notice and this notice are
#       left intact.
#
#		Fluxuan Linux Installer
#	
#		https://fluxuan.org - https://forums.fluxuan.org
#		Thank you for your interest in Fluxuan Linux !!


CONF=${disk_conf:="/tmp/disk.txt"}

check_root () {
# check if running as root
[[ $(id -u) -eq 0 ]] || { echo -e "\t You need to be root so use SUDO !\n" ; exit 1 ; }
}



# writing to disk.conf
d_conf () {
	local _conf=$1 _value=$2
	printf '%s\n' "${_conf}=${_value}" >> "$CONF"
}

# Parsing values from disk.conf
d_read () {
	local _conf=$1
	grep "${_conf}" "$CONF" | cut -d '=' -f2
}

welcome_msg () {

whiptail --title "Fluxuan-Installer" --msgbox "Welcome to Fluxuan-Installer utility.
This installer will guide you to the rest of the setup process.

Thank you for your interest in Fluxuan Linux.

https://Fluxuan.org - https://Forums.Fluxuan.org" 15 65

}
install_dep () {
{
apt-get update && apt-get install arch-install-scripts -y -qq
for ((i=0; i<=100; i+=1)); do
        proc=$(ps -aux | grep -v grep | grep -e "apt-get")
            if [[ "$proc" == "" ]]; then break; fi
            # Sleep for a longer period if the database is really big 
            # as dumping will take longer.
            sleep 1
            echo "$i"
           
        i=$(expr $i + 1)
        done
        # If it is done then display 100%
        echo 100
        # Give it some time to display the progress to the user.
        sleep 2
} | whiptail --gauge "Installing Dependencies..." 6 60 0
}
ask_part () {

disk=$(whiptail --inputbox "Your available devices are :

$(lsblk -lp | awk '/disk/ { print $1, "(" $4 ")" }' | cut -d '/' -f3)
----------------------------------------------------------
Which disk should the system be installed on? (e.g. sdX):" 15 65 sdX --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
# The `3>&1 1>&2 2>&3` is a small trick to swap the stderr with stdout
# Meaning instead of return the error code, it returns the value entered

# Now to check if the user pressed OK or Cancel
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf DISK "$disk"
else
    exit 1 ;
fi



mode=$(whiptail --inputbox "Will you boot in bios or EFI mode (-- write bios or EFI --)?" 15 65 bios --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
# The `3>&1 1>&2 2>&3` is a small trick to swap the stderr with stdout
# Meaning instead of return the error code, it returns the value entered

# Now to check if the user pressed OK or Cancel
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf MODE "$mode"
else
    exit 1 ;
fi


whiptail --title "Fluxuan-Installer" --msgbox "Custom partitioning schemes are not yet supported.
The default scheme will be:

1-> 200mb Boot Partition on /dev/${disk}1

2-> Automatic SWAP in /etc/dphys-swapfile adjust if you really need to

3-> Root Partition of the remaining space on /dev/${disk}3" 15 65 ;

if (whiptail --title "Fluxuan-Installer" --yesno "Proceed? (all data on $disk will be deleted, so make sure you backed up anything important)." 8 78); then
    	d_conf BOOTP "$disk"1
		d_conf ROOTP "$disk"2
		mk_part
else
    exit 1 ;
fi



}

mk_part() {
{
	local _disk _mode _swaps
	_disk=$(d_read DISK)
	_mode=$(d_read MODE)
	
	
	
	if [ "$_mode" == "bios" ]; then
		parted -s /dev/"$_disk" mklabel msdos
		parted -s /dev/"$_disk" mkpart primary ext2 1 200MB
		parted -s /dev/"$_disk" set 1 boot on 
	else
		parted -s /dev/"$_disk" mklabel gpt
		parted -s /dev/"$_disk" mkpart primary ext2 1 200MB
		parted -s /dev/"$_disk" set 1 ESP on
		
	fi	
	
		parted -s /dev/"$_disk" mkpart primary ext2 200MB 100%
		mkfs.ext4 /dev/"$_disk"2 >/dev/null
	if [ "$_mode" == "bios" ]; then
		mkfs.ext4 /dev/"$_disk"1 >/dev/null
	else
		mkfs.fat -F 32 /dev/"$_disk"1 >/dev/null
	fi
		partx -u /dev/"$_disk"
		
		for ((i=0; i<=100; i+=1)); do
        sleep 0.1
        echo "$i"
   		done

} | whiptail --gauge "Creating Partitions on your disk" 6 60 0
}

copy_sys () {
{
local  _mode _disk
	_mode=$(d_read MODE)
	_disk=$(d_read DISK)
	mount /dev/"$_disk"2 /mnt
	if [ "$_mode" == "bios" ]; then
		mkdir -p /mnt/boot
		mount /dev/"$_disk"1 /mnt/boot
	else
		mkdir -p /mnt/boot/efi
		mount /dev/"$_disk"1 /mnt/boot/efi
	fi
rsync -axHAWXS --numeric-ids --info=progress2 / /mnt/
if [[ -f /mnt/usr/sbin/update-initramfs.distrib ]] ; then
    cp /mnt/usr/sbin/update-initramfs.distrib /mnt/usr/sbin/update-initramfs
fi
if [[ -f /mnt/usr/sbin/update-initramfs.debian ]] ; then
    cp /mnt/usr/sbin/update-initramfs.debian /mnt/usr/sbin/update-initramfs
fi

genfstab -U /mnt | sudo tee /mnt/etc/fstab >/dev/null

for ((i=0; i<=100; i+=1)); do
        proc=$(ps -aux | grep -v grep | grep -e "rsync")
            if [[ "$proc" == "" ]]; then break; fi
            # Sleep for a longer period if the database is really big 
            # as dumping will take longer.
            sleep 1
            echo "$i"
           
        i=$(expr $i + 1)
        done
        # If it is done then display 100%
        echo 100
        # Give it some time to display the progress to the user.
        sleep 2
} | whiptail --gauge "Installing Operating System" 6 60 0
}

timezone() {
	arch-chroot /mnt apt-get update
	arch-chroot /mnt apt-get install dphys-swapfile -y -qq
	arch-chroot /mnt dpkg-reconfigure tzdata
	arch-chroot /mnt dpkg-reconfigure locales
}

set_hostname() {
hostname=$(whiptail --inputbox "Input your desired hostname" 8 78 fluxuan --title "Configuration..." 3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
    d_conf HOSTNAME "$hostname"
    echo "$hostname" | sudo tee /mnt/etc/hostname >/dev/null
	cat <<EOF | sudo tee /mnt/etc/hosts >/dev/null
127.0.0.1	localhost
127.0.1.1	$hostname
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF
else
    rm "$CONF" ;
    exit 1 ;
fi
}

set_pass() {
PASSWD=$(whiptail --title "Fluxuan-Installer" --passwordbox "Choose ROOT Password" 10 60 3>&1 1>&2 2>&3)
PASSWD_CHECK=$(whiptail --title "Fluxuan-Installer" --passwordbox "Verify Root Password" 10 60 3>&1 1>&2 2>&3)

if [[ "$PASSWD" == "$PASSWD_CHECK" ]]; then
	arch-chroot /mnt echo -e "$PASSWD\n$PASSWD" | passwd
else
set_pass
fi
}

set_default_user() {
local _name
	_name=$(d_read NAME)
	
name=$(whiptail --inputbox "Create default USERNAME:" 8 78 fluxuan --title "Fluxuan-Installer" 3>&1 1>&2 2>&3)
exitstatus=$?
if [ $exitstatus = 0 ]; then
	d_conf NAME "$name"
    chroot /mnt useradd -m "$name"
    arch-chroot /mnt usermod -aG cdrom,floppy,audio,dip,video,plugdev,netdev,sudo "$name"
    arch-chroot /mnt usermod -s /bin/bash "$name"
	chroot /mnt userdel -r $(logname)
else
rm "$CONF" ;
    exit 1 ;
fi

PASSWD_USER=$(whiptail --title "Fluxuan-Installer" --passwordbox "Choose USER Password" 10 60 3>&1 1>&2 2>&3)
PASSWD_CHECK_USER=$(whiptail --title "Fluxuan-Installer" --passwordbox "Verify USER Password" 10 60 3>&1 1>&2 2>&3)

if [[ "$PASSWD_USER" == "$PASSWD_CHECK_USER" ]]; then
	arch-chroot /mnt echo -e "$PASSWD_USER\n$PASSWD_USER" | passwd "$_name"
	
	
else
set_default_user
fi

}


setup_grub() {
{
	local _mode _disk
	_mode=$(d_read MODE)
	_disk=$(d_read DISK)
	if [ "$_mode" == "bios" ]; then
		arch-chroot /mnt grub-install /dev/"$_disk" >/dev/null
		arch-chroot /mnt update-grub >/dev/null
	else
		arch-chroot /mnt grub-install --target=x86_64-efi --efi-directory=/boot/efi >/dev/null
		arch-chroot /mnt grub-install /dev/"$_disk" >/dev/null
		arch-chroot /mnt update-grub >/dev/null
	fi
	for ((i=0; i<=100; i+=1)); do
        sleep 0.1
        echo "$i"
    done
} | whiptail --gauge "Installing Grub please wait..." 6 60 0
}

finish() {
	if (whiptail --title "Fluxuan-Installer" --yesno "Fluxuan is now installed. YES to reboot or NO to continue using live disk." 8 78); then
	rm "$CONF" ;
	rm "$rsync_excludes" ;
    reboot
	else
    rm "$CONF" ;
    rm "$rsync_excludes" ;
    exit 0 ;
	fi
}

do_install() {
	welcome_msg
	install_dep
	ask_part
	mk_part
	copy_sys
	timezone
	locale
	set_hostname
	set_pass
	set_default_user
	setup_grub
	finish
}

do_install
